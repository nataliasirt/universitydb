<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.IProfessorDAO">
    <resultMap id="professorResultMap" type="models.Professor" autoMapping="false">
        <result column="professor_id" property="professorId"/>
        <result column="degree" property="degree"/>
        <result column="workedHours" property="workedHours"/>
    </resultMap>

    <select id="select" parameterType="int" resultMap="professorResultMap">
        SELECT p.user_id, p.id, u.name, u.surname, u.email, u.personal_id, p.degree FROM users u JOIN professors p on u.id = p.user_id and p.id = #{id}
    </select>

    <select id="selectAll" resultMap="professorResultMap">
        SELECT p.user_id, p.id, u.name, u.surname, u.email, u.personal_id, p.degree FROM users u RIGHT JOIN professors p on u.id = p.user_id
    </select>

    <insert id="insert" parameterType="models.Professor">
        INSERT into professors (user_id, degree) VALUES (#{professor.userId}, #{professor.degree})
    </insert>

    <delete id="delete">
        DELETE FROM users u JOIN professors p on u.id = p.user_id WHERE u.id = #{id}
    </delete>

    <update id="update">
        UPDATE users u JOIN professors p on u.id = p.user_id
        SET u.name = #{professor.name},
        u.surname = #{professor.surname},
        u.email = #{professor.email},
        u.personal_id = #{professor.personalId},
        p.degree = #{professor.degree}
        WHERE u.id = #{id}
    </update>
</mapper>